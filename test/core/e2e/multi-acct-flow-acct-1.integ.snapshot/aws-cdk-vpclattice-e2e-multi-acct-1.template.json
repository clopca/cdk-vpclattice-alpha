{
 "Resources": {
  "ServiceVPC2EDFAACA": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC"
     }
    ]
   }
  },
  "ServiceVPCPublicSubnet1SubnetEF6BAD22": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "eu-central-1a",
    "CidrBlock": "10.0.0.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPublicSubnet1RouteTable805A2C83": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPublicSubnet1RouteTableAssociationA56541AB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceVPCPublicSubnet1RouteTable805A2C83"
    },
    "SubnetId": {
     "Ref": "ServiceVPCPublicSubnet1SubnetEF6BAD22"
    }
   }
  },
  "ServiceVPCPublicSubnet1DefaultRoute1478B70C": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ServiceVPCIGW3D60E7E3"
    },
    "RouteTableId": {
     "Ref": "ServiceVPCPublicSubnet1RouteTable805A2C83"
    }
   },
   "DependsOn": [
    "ServiceVPCVPCGWBA0446DD"
   ]
  },
  "ServiceVPCPublicSubnet1EIP3CB84611": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PublicSubnet1"
     }
    ]
   }
  },
  "ServiceVPCPublicSubnet1NATGatewayCDCC51E1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "ServiceVPCPublicSubnet1EIP3CB84611",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "ServiceVPCPublicSubnet1SubnetEF6BAD22"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "ServiceVPCPublicSubnet1DefaultRoute1478B70C",
    "ServiceVPCPublicSubnet1RouteTableAssociationA56541AB"
   ]
  },
  "ServiceVPCPublicSubnet2SubnetE833450A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "eu-central-1b",
    "CidrBlock": "10.0.32.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPublicSubnet2RouteTable47778387": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPublicSubnet2RouteTableAssociation87A32462": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceVPCPublicSubnet2RouteTable47778387"
    },
    "SubnetId": {
     "Ref": "ServiceVPCPublicSubnet2SubnetE833450A"
    }
   }
  },
  "ServiceVPCPublicSubnet2DefaultRoute44C700CC": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ServiceVPCIGW3D60E7E3"
    },
    "RouteTableId": {
     "Ref": "ServiceVPCPublicSubnet2RouteTable47778387"
    }
   },
   "DependsOn": [
    "ServiceVPCVPCGWBA0446DD"
   ]
  },
  "ServiceVPCPublicSubnet3Subnet6B5EE656": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "eu-central-1c",
    "CidrBlock": "10.0.64.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPublicSubnet3RouteTable9E3DCDE4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPublicSubnet3RouteTableAssociation9E0E040B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceVPCPublicSubnet3RouteTable9E3DCDE4"
    },
    "SubnetId": {
     "Ref": "ServiceVPCPublicSubnet3Subnet6B5EE656"
    }
   }
  },
  "ServiceVPCPublicSubnet3DefaultRoute9B251DE4": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ServiceVPCIGW3D60E7E3"
    },
    "RouteTableId": {
     "Ref": "ServiceVPCPublicSubnet3RouteTable9E3DCDE4"
    }
   },
   "DependsOn": [
    "ServiceVPCVPCGWBA0446DD"
   ]
  },
  "ServiceVPCPrivateSubnet1SubnetD5E693D0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "eu-central-1a",
    "CidrBlock": "10.0.96.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPrivateSubnet1RouteTable44B0E20B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPrivateSubnet1RouteTableAssociation3560433A": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceVPCPrivateSubnet1RouteTable44B0E20B"
    },
    "SubnetId": {
     "Ref": "ServiceVPCPrivateSubnet1SubnetD5E693D0"
    }
   }
  },
  "ServiceVPCPrivateSubnet1DefaultRouteAC5C4D26": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ServiceVPCPublicSubnet1NATGatewayCDCC51E1"
    },
    "RouteTableId": {
     "Ref": "ServiceVPCPrivateSubnet1RouteTable44B0E20B"
    }
   }
  },
  "ServiceVPCPrivateSubnet2Subnet1C3DB1A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "eu-central-1b",
    "CidrBlock": "10.0.128.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPrivateSubnet2RouteTable253A2D2F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPrivateSubnet2RouteTableAssociation32000FAC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceVPCPrivateSubnet2RouteTable253A2D2F"
    },
    "SubnetId": {
     "Ref": "ServiceVPCPrivateSubnet2Subnet1C3DB1A3"
    }
   }
  },
  "ServiceVPCPrivateSubnet2DefaultRoute89845233": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ServiceVPCPublicSubnet1NATGatewayCDCC51E1"
    },
    "RouteTableId": {
     "Ref": "ServiceVPCPrivateSubnet2RouteTable253A2D2F"
    }
   }
  },
  "ServiceVPCPrivateSubnet3Subnet187F285A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "eu-central-1c",
    "CidrBlock": "10.0.160.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPrivateSubnet3RouteTable2B409FAC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceVPCPrivateSubnet3RouteTableAssociationBE67BB4F": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ServiceVPCPrivateSubnet3RouteTable2B409FAC"
    },
    "SubnetId": {
     "Ref": "ServiceVPCPrivateSubnet3Subnet187F285A"
    }
   }
  },
  "ServiceVPCPrivateSubnet3DefaultRoute33C35962": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ServiceVPCPublicSubnet1NATGatewayCDCC51E1"
    },
    "RouteTableId": {
     "Ref": "ServiceVPCPrivateSubnet3RouteTable2B409FAC"
    }
   }
  },
  "ServiceVPCIGW3D60E7E3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-e2e-multi-acct-1/ServiceVPC"
     }
    ]
   }
  },
  "ServiceVPCVPCGWBA0446DD": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "ServiceVPCIGW3D60E7E3"
    },
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ResSGE9E4FDE5": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "aws-cdk-vpclattice-e2e-multi-acct-1/ResSG",
    "GroupName": "service-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "10.0.0.0/16",
      "Description": "from 10.0.0.0/16:ALL TRAFFIC",
      "IpProtocol": "-1"
     },
     {
      "CidrIp": "169.254.0.0/16",
      "Description": "from 169.254.0.0/16:ALL TRAFFIC",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "Parking6000F0C6": {
   "Type": "AWS::VpcLattice::Service",
   "Properties": {
    "AuthType": "AWS_IAM",
    "Name": "test-svc"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ParkingListenerlistener1AACA213C": {
   "Type": "AWS::VpcLattice::Listener",
   "Properties": {
    "DefaultAction": {
     "Forward": {
      "TargetGroups": [
       {
        "TargetGroupIdentifier": {
         "Fn::GetAtt": [
          "LambdaTGF1D88294",
          "Id"
         ]
        },
        "Weight": 100
       }
      ]
     }
    },
    "Name": "listener1",
    "Port": 443,
    "Protocol": "HTTPS",
    "ServiceIdentifier": {
     "Fn::GetAtt": [
      "Parking6000F0C6",
      "Id"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ParkingServiceAuthPolicy69D9B431": {
   "Type": "AWS::VpcLattice::AuthPolicy",
   "Properties": {
    "Policy": {
     "Statement": [
      {
       "Action": "vpc-lattice-svcs:*",
       "Condition": {
        "StringNotEqualsIgnoreCase": {
         "aws:PrincipalType": "anonymous"
        }
       },
       "Effect": "Allow",
       "Principal": "*",
       "Resource": "*"
      },
      {
       "Action": "vpc-lattice-svcs:*",
       "Condition": {
        "StringEquals": {
         "vpc-lattice-svcs:RequestMethod": "GET"
        }
       },
       "Effect": "Allow",
       "Principal": "*",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "ResourceIdentifier": {
     "Fn::GetAtt": [
      "Parking6000F0C6",
      "Arn"
     ]
    }
   }
  },
  "LatticeLambdaReservationServiceRole4BB66298": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "ServiceVPCPrivateSubnet1DefaultRouteAC5C4D26",
    "ServiceVPCPrivateSubnet1RouteTableAssociation3560433A",
    "ServiceVPCPrivateSubnet2DefaultRoute89845233",
    "ServiceVPCPrivateSubnet2RouteTableAssociation32000FAC",
    "ServiceVPCPrivateSubnet3DefaultRoute33C35962",
    "ServiceVPCPrivateSubnet3RouteTableAssociationBE67BB4F"
   ]
  },
  "LatticeLambdaReservationSecurityGroupDACFDAFC": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function awscdkvpclatticee2emultiacct1LatticeLambdaReservation24C40B78",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   },
   "DependsOn": [
    "ServiceVPCPrivateSubnet1DefaultRouteAC5C4D26",
    "ServiceVPCPrivateSubnet1RouteTableAssociation3560433A",
    "ServiceVPCPrivateSubnet2DefaultRoute89845233",
    "ServiceVPCPrivateSubnet2RouteTableAssociation32000FAC",
    "ServiceVPCPrivateSubnet3DefaultRoute33C35962",
    "ServiceVPCPrivateSubnet3RouteTableAssociationBE67BB4F"
   ]
  },
  "LatticeLambdaReservation6C7DA18B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-694275606777-eu-central-1",
     "S3Key": "258f26f41bc3c93bd430b1a065a6452c8ba422b6bd9618a2a9ad0947fe3e8756.zip"
    },
    "Handler": "index.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "LatticeLambdaReservationServiceRole4BB66298",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 240,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "LatticeLambdaReservationSecurityGroupDACFDAFC",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "ServiceVPCPrivateSubnet1SubnetD5E693D0"
      },
      {
       "Ref": "ServiceVPCPrivateSubnet2Subnet1C3DB1A3"
      },
      {
       "Ref": "ServiceVPCPrivateSubnet3Subnet187F285A"
      }
     ]
    }
   },
   "DependsOn": [
    "LatticeLambdaReservationServiceRole4BB66298",
    "ServiceVPCPrivateSubnet1DefaultRouteAC5C4D26",
    "ServiceVPCPrivateSubnet1RouteTableAssociation3560433A",
    "ServiceVPCPrivateSubnet2DefaultRoute89845233",
    "ServiceVPCPrivateSubnet2RouteTableAssociation32000FAC",
    "ServiceVPCPrivateSubnet3DefaultRoute33C35962",
    "ServiceVPCPrivateSubnet3RouteTableAssociationBE67BB4F"
   ]
  },
  "LambdaTGF1D88294": {
   "Type": "AWS::VpcLattice::TargetGroup",
   "Properties": {
    "Config": {
     "LambdaEventStructureVersion": "V1"
    },
    "Name": "service-tg",
    "Targets": [
     {
      "Id": {
       "Fn::GetAtt": [
        "LatticeLambdaReservation6C7DA18B",
        "Arn"
       ]
      }
     }
    ],
    "Type": "LAMBDA"
   }
  },
  "ServiceNetworkEF29AF70": {
   "Type": "AWS::VpcLattice::ServiceNetwork",
   "Properties": {
    "AuthType": "NONE",
    "Name": "superapps-auth-svcnetwork-multi-acct"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ServiceNetworkAssociateVPCc821072fb84f72ee82338eb73a9a066209539c6f85VpcAssociationc821072fb84f72ee82338eb73a9a066209539c6f85894E73CC": {
   "Type": "AWS::VpcLattice::ServiceNetworkVpcAssociation",
   "Properties": {
    "ServiceNetworkIdentifier": {
     "Fn::GetAtt": [
      "ServiceNetworkEF29AF70",
      "Id"
     ]
    },
    "VpcIdentifier": {
     "Ref": "ServiceVPC2EDFAACA"
    }
   }
  },
  "ServiceNetworkServiceAssociationc87d8c1f089524b4b485f436332044b1e27a82dc9fLatticeAssociationc83f7cb6931250f5fc2fdab083babd51770e9e5ad05DAED809": {
   "Type": "AWS::VpcLattice::ServiceNetworkServiceAssociation",
   "Properties": {
    "ServiceIdentifier": {
     "Fn::GetAtt": [
      "Parking6000F0C6",
      "Id"
     ]
    },
    "ServiceNetworkIdentifier": {
     "Fn::GetAtt": [
      "ServiceNetworkEF29AF70",
      "Id"
     ]
    }
   }
  },
  "ServiceNetworkServiceNetworkShare4B0348FC": {
   "Type": "AWS::RAM::ResourceShare",
   "Properties": {
    "Name": "ServiceNetwork-Share",
    "Principals": [
     "249522321342"
    ],
    "ResourceArns": [
     {
      "Fn::GetAtt": [
       "ServiceNetworkEF29AF70",
       "Arn"
      ]
     }
    ]
   }
  }
 },
 "Outputs": {
  "SvcDomainName": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "Parking6000F0C6",
        "DnsEntry.DomainName"
       ]
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}