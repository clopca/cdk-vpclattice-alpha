{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC"
     }
    ]
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ]
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet2EIP4947BC00": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2NATGateway3C070193": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet2EIP4947BC00",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ]
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    }
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet2NATGateway3C070193"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    }
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-vpclattice-integ-listener/VPC"
     }
    ]
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "ServiceDBC79909": {
   "Type": "AWS::VpcLattice::Service",
   "Properties": {
    "AuthType": "NONE",
    "DnsEntry": {}
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ServiceListenerlistener1DFC41768": {
   "Type": "AWS::VpcLattice::Listener",
   "Properties": {
    "DefaultAction": {
     "FixedResponse": {
      "StatusCode": 404
     }
    },
    "Name": "listener1",
    "Port": 80,
    "Protocol": "HTTP",
    "ServiceIdentifier": {
     "Fn::GetAtt": [
      "ServiceDBC79909",
      "Id"
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "ServiceListenerlistener1firstrule3389A73E": {
   "Type": "AWS::VpcLattice::Rule",
   "Properties": {
    "Action": {
     "Forward": {
      "TargetGroups": [
       {
        "TargetGroupIdentifier": {
         "Fn::GetAtt": [
          "LambdaTGF1D88294",
          "Id"
         ]
        },
        "Weight": 100
       }
      ]
     }
    },
    "ListenerIdentifier": {
     "Fn::GetAtt": [
      "ServiceListenerlistener1DFC41768",
      "Id"
     ]
    },
    "Match": {
     "HttpMatch": {
      "HeaderMatches": [
       {
        "CaseSensitive": true,
        "Match": {
         "Exact": "some-value"
        },
        "Name": "x-custom-header"
       }
      ]
     }
    },
    "Name": "first-rule",
    "Priority": 1,
    "ServiceIdentifier": {
     "Fn::GetAtt": [
      "ServiceDBC79909",
      "Id"
     ]
    }
   }
  },
  "ServiceListenerlistener1secondruleAB0BE22A": {
   "Type": "AWS::VpcLattice::Rule",
   "Properties": {
    "Action": {
     "Forward": {
      "TargetGroups": [
       {
        "TargetGroupIdentifier": {
         "Fn::GetAtt": [
          "LambdaTGF1D88294",
          "Id"
         ]
        },
        "Weight": 50
       }
      ]
     }
    },
    "ListenerIdentifier": {
     "Fn::GetAtt": [
      "ServiceListenerlistener1DFC41768",
      "Id"
     ]
    },
    "Match": {
     "HttpMatch": {
      "Method": "GET"
     }
    },
    "Name": "second-rule",
    "Priority": 2,
    "ServiceIdentifier": {
     "Fn::GetAtt": [
      "ServiceDBC79909",
      "Id"
     ]
    }
   }
  },
  "ServiceListenerlistener1thirdrule86C335C1": {
   "Type": "AWS::VpcLattice::Rule",
   "Properties": {
    "Action": {
     "FixedResponse": {
      "StatusCode": 404
     }
    },
    "ListenerIdentifier": {
     "Fn::GetAtt": [
      "ServiceListenerlistener1DFC41768",
      "Id"
     ]
    },
    "Match": {
     "HttpMatch": {
      "PathMatch": {
       "CaseSensitive": false,
       "Match": {
        "Exact": "/test"
       }
      }
     }
    },
    "Name": "third-rule",
    "Priority": 3,
    "ServiceIdentifier": {
     "Fn::GetAtt": [
      "ServiceDBC79909",
      "Id"
     ]
    }
   }
  },
  "ServiceNetworkEF29AF70": {
   "Type": "AWS::VpcLattice::ServiceNetwork",
   "Properties": {
    "AuthType": "AWS_IAM",
    "Name": "my-custom-name"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ServiceNetworkAssociateVPCc85ecd70a18ff76c17d2d1dfea3506fa57fe14d599VpcAssociationc85ecd70a18ff76c17d2d1dfea3506fa57fe14d5998B1EC2E0": {
   "Type": "AWS::VpcLattice::ServiceNetworkVpcAssociation",
   "Properties": {
    "ServiceNetworkIdentifier": {
     "Fn::GetAtt": [
      "ServiceNetworkEF29AF70",
      "Id"
     ]
    },
    "VpcIdentifier": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "ServiceNetworkServiceAssociationc847ec75e7b822c3142d37378a9e1d4e9d15aed398LatticeAssociationc801a63c191db97f7018a3a6798a1946b6a66e3af0AD4D1B15": {
   "Type": "AWS::VpcLattice::ServiceNetworkServiceAssociation",
   "Properties": {
    "ServiceIdentifier": {
     "Fn::GetAtt": [
      "ServiceDBC79909",
      "Id"
     ]
    },
    "ServiceNetworkIdentifier": {
     "Fn::GetAtt": [
      "ServiceNetworkEF29AF70",
      "Id"
     ]
    }
   }
  },
  "ServiceNetworkServiceNetworkAuthPolicy27A7858F": {
   "Type": "AWS::VpcLattice::AuthPolicy",
   "Properties": {
    "Policy": {
     "Statement": [
      {
       "Action": "vpc-lattice-svcs:*",
       "Condition": {
        "StringNotEqualsIgnoreCase": {
         "aws:PrincipalType": "anonymous"
        }
       },
       "Effect": "Allow",
       "Principal": "*",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "ResourceIdentifier": {
     "Fn::GetAtt": [
      "ServiceNetworkEF29AF70",
      "Arn"
     ]
    }
   }
  },
  "LambdaTargetFunctionServiceRole8E9A299C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LambdaTargetFunction2F5BAF5A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n\t\t  exports.handler = async (event) => {\n\t\t\t  return {\n\t\t\t\t  isBase64Encoded: false,\n\t\t\t\t  statusCode: 200,\n\t\t\t\t  body: JSON.stringify({ message: \"Hello from Lambda!\" }),\n\t\t\t  };\n\t\t  };\n\t  "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "LambdaTargetFunctionServiceRole8E9A299C",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "LambdaTargetFunctionServiceRole8E9A299C"
   ]
  },
  "LambdaTGF1D88294": {
   "Type": "AWS::VpcLattice::TargetGroup",
   "Properties": {
    "Config": {
     "LambdaEventStructureVersion": "V1"
    },
    "Targets": [
     {
      "Id": {
       "Fn::GetAtt": [
        "LambdaTargetFunction2F5BAF5A",
        "Arn"
       ]
      }
     }
    ],
    "Type": "LAMBDA"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}